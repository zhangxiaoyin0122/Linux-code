#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <string.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>

int main(int argc,char* argv[]){
    //判断参数个数是否正确
    if(argc != 3){
        printf("Usage: ./main 192.168.193.128 9000\n");
        return -1;
    }
    //创建socket套接字
    int sockfd = socket(AF_INET,SOCK_DGRAM,IPPROTO_UDP);
    if( sockfd < 0 ){
        perror("socket error");
        return -1;
    }
    struct sockaddr_in addr;
    addr.sin_family = AF_INET;
    addr.sin_port = htons(atoi(argv[2]));
    addr.sin_addr.s_addr = inet_addr(argv[1]);
    socklen_t len = sizeof(struct sockaddr_in);
    //绑定
    int ret = bind(sockfd,(struct sockaddr*)&addr,len);
    if(ret < 0){
        perror("bind error");
        return -1;
    }


    while(1){
        //接收数据
        char buf[1024] = {0};
        struct sockaddr_in cliaddr;
        socklen_t len = sizeof(struct sockaddr_in);
        int ret = recvfrom(sockfd,buf,1023,0,(struct sockaddr*)&cliaddr,&len);
        if(ret < 0){
            perror("recvfrom error");
            close(sockfd);
            return -1;
        }
        printf("client say: %s\n",buf);
        len = sizeof(struct sockaddr_in);
        memset(buf,0X00,1024); //清空
        scanf("%s",buf);
        ret = sendto(sockfd,buf,strlen(buf),0,(struct sockaddr*)&cliaddr,len);
        if(ret < 0){
            perror("sendto error");
            close(sockfd);
            return -1;
        }
    }
    close(sockfd);
    return 0;
}
