管道:
	本质:其实是内核的一块缓冲区,不同进程通过访问同一块内核缓冲区实现不同进
	程之间的
匿名管道:没有标识符,只适用于具有亲缘关系之间的进程进行通信
命名管道:具有标识符,适用于同一主机的任意间进程通信
int fd[2];
int pipe(fd[2]); fd[0]:读端 fd[1]:写端

共享内存: 
	本质是开辟的一块物理内存,多个进程通过将同一块物理内存映射到自己的虚拟
	地址空间,不同的进程通过自己的虚拟地址空间进行访问,实现数据共享,进程间
	通信.

	特性:共享内存是最快的通信方式
	原因:共享内存的操作相较于其它操作少了两步用户态到内核态的数据拷贝
操作流程:
	1.创建(打开)消息队列
		#include <sys/ipc.h>
		#include <sys/shm.h>
		int shmget(key_t key,size_t size,int shmflg); IPC_CREAT|IPC_EXCL
	2.将这块共享内存映射到进程的虚拟地址空间
		void* shmat(int shmid,const void* shmaddr,int shmflg);
	3.解除进程与共享内存之间的映射关系
		int shmdt(const void* shmaddr);
	4.删除共享内存
		int shmctl(int shmid,int cmd,struct shmid_ds* buf); IPC_RMID(删除) buf(NULL)

注意事项:
	共享内存的操作并非是安全的,有可能多个进程写入同一块共享内存则会造成数据交叉或覆盖的
	共享内存的操作是需要保护的(通过同步与互斥进行保护(信号量))

消息队列:
	
信号量: